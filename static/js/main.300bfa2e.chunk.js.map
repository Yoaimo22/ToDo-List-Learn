{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Head.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setTextTodo","getTextTodo","setTodo","getTodos","setStatus","setAnimateInsert","getAnimateInsert","insertIdLast","getLengthTask","setLengthTask","useBoolean","showAlert","closeAlert","useState","statusAlert","setStatusAlert","messageAlert","setMessageAlert","submitHandle","e","preventDefault","toggle","newData","id","Math","random","text","completed","date","Date","now","useEffect","setTimeout","status","mb","position","right","top","onClick","columns","spacing","size","value","pr","placeholder","onChange","target","onKeyUp","key","width","h","bg","color","icon","Todo","todo","getIdLast","getAnimateDelete","setAnimateDelete","mt","className","w","p","colorScheme","map","item","defaultIsChecked","as","filter","el","TodoList","getFilterTodos","length","mr","variant","m","borderRadius","Head","useColorMode","colorMode","toggleColorMode","isRound","alignSelf","fontWeight","bgGradient","bgClip","Navbar","useColorModeValue","px","alignItems","justifyContent","href","App","getStatus","setFilterTodos","getLocal","filterHandler","saveLocal","saveNotFinishTodo","sort","a","b","setFilterTodosFunction","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","notFinishedYet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.300bfa2e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  SimpleGrid,\n  Select,\n  useBoolean,\n  Alert,\n  AlertIcon,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport { MdArrowDropDown } from \"react-icons/md\";\n\nconst Form = ({\n  setTextTodo,\n  getTextTodo,\n  setTodo,\n  getTodos,\n  setStatus,\n  setAnimateInsert,\n  getAnimateInsert,\n  insertIdLast,\n  getLengthTask,\n  setLengthTask,\n}) => {\n  const [showAlert, closeAlert] = useBoolean();\n  const [statusAlert, setStatusAlert] = useState(\"\");\n  const [messageAlert, setMessageAlert] = useState(\"\");\n\n  const inputTextHandle = (e) => {\n    setTextTodo(e.target.value);\n  };\n\n  const keyUpHandler = (e) => {\n    if (e.key === \"Enter\") submitHandle(e);\n  };\n\n  const submitHandle = (e) => {\n    e.preventDefault();\n    if (showAlert !== true) closeAlert.toggle();\n    if (getTextTodo === \"\") {\n      setStatusAlert(\"error\");\n      setMessageAlert(\"Inputan tidak boleh kosong!\");\n    } else {\n      const newData = {\n        id: Math.random() * 1000,\n        text: getTextTodo,\n        completed: false,\n        date: Date.now(),\n      };\n\n      setTodo([...getTodos, newData]);\n\n      insertIdLast(newData.id);\n      setAnimateInsert.toggle();\n      setTextTodo(\"\");\n      setStatusAlert(\"success\");\n      setMessageAlert(\"Todo telah ditambahkan\");\n      setLengthTask(getLengthTask + 1);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (getAnimateInsert === true) {\n        setAnimateInsert.toggle();\n        insertIdLast(\"\");\n      }\n    }, 1000);\n  });\n\n  const statusHandle = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const closeAlertHandle = () => {\n    closeAlert.toggle();\n    setStatusAlert(\"\");\n    setMessageAlert(\"\");\n  };\n\n  return (\n    <>\n      {showAlert && (\n        <Alert status={statusAlert} mb={4}>\n          <AlertIcon />\n          {messageAlert}\n          <CloseButton\n            position=\"absolute\"\n            right=\"8px\"\n            top=\"8px\"\n            onClick={closeAlertHandle}\n          />\n        </Alert>\n      )}\n      <SimpleGrid columns={2} spacing={10} mb={10}>\n        <InputGroup size=\"md\">\n          <Input\n            value={getTextTodo}\n            pr=\"4.5rem\"\n            placeholder=\"Enter Todo List\"\n            onChange={inputTextHandle}\n            onKeyUp={keyUpHandler}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={submitHandle}\n              bg=\"teal.400\"\n              color=\"white\"\n            >\n              +\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        <Select\n          icon={<MdArrowDropDown />}\n          placeholder=\"Filter Todo List\"\n          onChange={statusHandle}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </Select>\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default Form;\n","// import React from \"react\";\nimport { useEffect } from \"react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport {\n  VStack,\n  Flex,\n  Text,\n  Box,\n  Spacer,\n  useBoolean,\n  Checkbox,\n} from \"@chakra-ui/react\";\n\nconst Todo = ({\n  todo,\n  text,\n  completed,\n  getTodos,\n  setTodo,\n  getAnimateInsert,\n  getIdLast,\n  getLengthTask,\n  setLengthTask,\n}) => {\n  const [getAnimateDelete, setAnimateDelete] = useBoolean();\n\n  const removeHandle = () => {\n    if (todo.completed === false) setLengthTask(getLengthTask - 1);\n    setAnimateDelete.toggle();\n    setTimeout(() => {\n      setTodo(getTodos.filter((el) => el.id !== todo.id));\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (getAnimateDelete) setAnimateDelete.toggle();\n  }, []);\n\n  const completedHandle = () => {\n    setLengthTask(getLengthTask - 1);\n    setTodo(\n      getTodos.map((item) => {\n        if (item.id !== todo.id) return item;\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      })\n    );\n  };\n\n  return (\n    <VStack\n      mt={3}\n      mb={3}\n      className={`${\n        getAnimateInsert && todo.id === getIdLast\n          ? \"animate__animated animate__fadeInDown\"\n          : \"\"\n      } ${getAnimateDelete ? \"animate__animated animate__fadeOutRight\" : \"\"}`}\n    >\n      <Box bg={completed ? \"blue\" : \"tomato\"} w=\"100%\" p={4} color=\"white\">\n        <Flex>\n          <Checkbox\n            colorScheme=\"blue\"\n            onChange={completedHandle}\n            defaultIsChecked={completed}\n          >\n            {completed ? <Text as=\"del\">{text}</Text> : <Text>{text}</Text>}\n          </Checkbox>\n          <Spacer />\n          <DeleteIcon mt={1} onClick={removeHandle} />\n        </Flex>\n      </Box>\n    </VStack>\n  );\n};\n\nexport default Todo;","import Todo from \"./Todo\";\nimport { Badge, Center, Flex } from \"@chakra-ui/react\";\nimport { IoAirplaneOutline } from \"react-icons/io5\";\n\nconst TodoList = ({\n  setTodo,\n  getTodos,\n  getFilterTodos,\n  getAnimateInsert,\n  getIdLast,\n  getLengthTask,\n  setLengthTask,\n}) => {\n  return (\n    <>\n    \n\n      {getLengthTask > 0 && `You have ${getLengthTask} pending task`}\n\n      {getFilterTodos.length > 0 ? (\n        getFilterTodos.map((todo) => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            getTodos={getTodos}\n            text={todo.text}\n            completed={todo.completed}\n            setTodo={setTodo}\n            getAnimateInsert={getAnimateInsert}\n            getIdLast={getIdLast}\n            getLengthTask={getLengthTask}\n            setLengthTask={setLengthTask}\n          />\n        ))\n      ) : (\n        <Center mr={1}>\n        \n             \n         <Flex>\n      <Badge variant='outline' colorScheme='green' p='4' m='20' borderRadius='xl'>\n      <IoAirplaneOutline/>\n        No Todos, yay!!!\n         <IoAirplaneOutline/>\n      </Badge>\n      </Flex>\n       \n      </Center>\n      )}\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport {\n  IconButton,\n  useColorMode,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\n\nimport { FaSun, FaMoon } from 'react-icons/fa';\n\n\n\nconst Head = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\nreturn (\n  <VStack p={4}>\n     <IconButton\n        icon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n        isRound='true'\n        size='lg'\n        alignSelf='flex-end'\n        onClick={toggleColorMode}\n      />\n       \n\n      <Heading\n        mb='8'\n        fontWeight='extrabold'\n        size='2xl'\n        bgGradient='linear(to-r, pink.500, pink.300, blue.500)'\n        bgClip='text'\n      >\n        Todo Application\n      </Heading>\n</VStack>\n)\n};\n\nexport default Head;"," import { Link } from '@chakra-ui/react'\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaTiktok } from \"react-icons/fa\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\r\n import {\r\n  Box,\r\n  Flex,\r\n\r\n  useColorModeValue,\r\n\r\n \r\n} from \"@chakra-ui/react\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n <Box bg={useColorModeValue(\"black.600\", \"blue.900\")} px={10}>\r\n        <Flex h={70} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n          <Box> WhatsApp\r\n          <Link href='https://bit.ly/3j2lxXY'>\r\n <BsWhatsapp/>  \r\n</Link>\r\n </Box>\r\n \r\n  <Flex alignItems={\"center\"} >\r\n          <Box> TikTok\r\n <Link href='https://www.tiktok.com/@pesmobile_exe' >\r\n <FaTiktok/> \r\n</Link>\r\n</Box>\r\n  </Flex>\r\n\r\n<Flex alignItems={\"right\"}>\r\n           \r\n<Box> Github\r\n<Link href='https://github.com/yoaimo22' w={100}>\r\n<AiFillGithub/> \r\n\r\n</Link>\r\n</Box>\r\n        </Flex>\r\n      </Flex>\r\n      </Box>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import { Container, Center, Heading, useBoolean } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport Head from \"./components/Head\";\nimport Navbar from \"./components/Navbar\";\nconst App = () => {\n  const [getTextTodo, setTextTodo] = useState(\"\");\n  const [getIdLast, insertIdLast] = useState(\"\");\n  const [getTodos, setTodo] = useState([]);\n  const [getStatus, setStatus] = useState(\"all\");\n  const [getFilterTodos, setFilterTodos] = useState([]);\n  const [getAnimateInsert, setAnimateInsert] = useBoolean();\n  const [getLengthTask, setLengthTask] = useState(0);\n\n  // useEffect\n  useEffect(() => {\n    getLocal();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocal();\n    saveNotFinishTodo();\n  }, [getTodos.sort((a, b) => b.date - a.date), getStatus]);\n\n  const setFilterTodosFunction = (completed) => {\n    setFilterTodos(getTodos.filter((item) => item.completed === completed));\n  };\n\n  const filterHandler = () => {\n    switch (getStatus) {\n      case \"completed\":\n        setFilterTodosFunction(true);\n        break;\n      case \"uncompleted\":\n        setFilterTodosFunction(false);\n        break;\n      default:\n        setFilterTodos(getTodos);\n        break;\n    }\n  };\n\n  const saveLocal = () => {\n    localStorage.setItem(\"getTodos\", JSON.stringify(getTodos));\n  };\n\n  const getLocal = () => {\n    if (localStorage.getItem(\"getTodos\") !== null) {\n      let todoLocal = JSON.parse(localStorage.getItem(\"getTodos\"));\n      setTodo(todoLocal);\n    }\n  };\n\n  const saveNotFinishTodo = () => {\n    const notFinishedYet = getTodos.filter((el) => el.completed === false);\n    setLengthTask(notFinishedYet.length);\n  };\n\n  return (\n    <>\n    <Navbar/>\n      <Head />\n      <Container>\n       \n        <Form\n          getTextTodo={getTextTodo}\n          setTextTodo={setTextTodo}\n          getTodos={getTodos}\n          setTodo={setTodo}\n          setStatus={setStatus}\n          filterHandler={filterHandler}\n          getAnimateInsert={getAnimateInsert}\n          setAnimateInsert={setAnimateInsert}\n          insertIdLast={insertIdLast}\n          getLengthTask={getLengthTask}\n          setLengthTask={setLengthTask}\n        />\n        <TodoList\n          getFilterTodos={getFilterTodos}\n          setTodo={setTodo}\n          getTodos={getTodos}\n          getAnimateInsert={getAnimateInsert}\n          getIdLast={getIdLast}\n          getLengthTask={getLengthTask}\n          setLengthTask={setLengthTask}\n        />\n      </Container>\n       \n    </>\n \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport \"animate.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}